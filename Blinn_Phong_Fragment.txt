#version 330


in vec3 normal;
in vec3 lightDir;
in vec3 pos;

float Ka, Kd, Ks;

uniform vec3 objectColor;
uniform float shininess;


void main(){

    float i_diffuse, i_specular, i_ambient;
    vec3 n;
    n = normalize(normal);
    vec3 viewDir = normalize(-pos);
    vec3 refDir = normalize(-reflect(lightDir, normal));
    vec3 halfwayDir = normalize(lightDir + viewDir);

    Ka = 0.1;
    Ks = 0.9;

    vec4 color;
    


    i_diffuse = max(dot(lightDir, n), 0.0);
//    i_specular = max( pow( dot(halfwayDir, n), shininess), 0.0);
    i_specular = pow( max( dot(n, halfwayDir), 0.0), shininess);
    i_ambient = 0.1;

    color = vec4(objectColor , 1.0) * i_diffuse + Ks * i_specular + i_ambient * Ka;
    gl_FragColor = color;
}